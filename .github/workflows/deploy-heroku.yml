name: Discord UFC notification deploy

# Run deploy after push event
on:
  push:
    branches:
      - main

# Create jobs to run tests and make deploy
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.9.0]
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Building application
        run: npm run build
      - name: Run tests
        run: npm run test:ci

  deploy:
    needs: tests
    #Only make deploy if job tests has checked with success
    if: needs.tests.outputs == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Heroku login credentials
        run: |
          cat > ~./netrc <<EOF
            machine apu.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            EOF
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      - name: Add heroku remote
        run: heroku git:remote --app $HEROKU_APP_NAME
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      - name: Push to Heroku
        run: git push heroku main
